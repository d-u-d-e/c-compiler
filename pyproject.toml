[tool.poetry]
name = "c-compiler"
version = "0.1.1"
description = "A C compiler implemented in Python, following the principles and techniques outlined in 'Writing a C Compiler' by N. Sandler."
authors = [
    "Alberto Ursino <albertoursino98@gmail.com>",
    "Marco Mariotto <mari8.marco@gmail.com>",
    "Fabio Marangoni",
    "Luca Crema",
]
readme = "README.md"
packages = [{ include = "compiler" }]

[tool.poetry.dependencies]
python = "^3.12"
loguru = "^0.7.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.0.1"


[tool.ruff]
exclude = []

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "UP",
    "I",
    "DTZ003",
    "DTZ004",
    "B",
    "A",
    "C4",
    "SIM",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
